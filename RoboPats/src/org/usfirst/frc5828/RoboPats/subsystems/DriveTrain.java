// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5828.RoboPats.subsystems;

import org.usfirst.frc5828.RoboPats.RobotMap;
import org.usfirst.frc5828.RoboPats.commands.*;

import edu.wpi.first.wpilibj.AnalogAccelerometer;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.VictorSP;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController1 = RobotMap.driveTrainSpeedController1;
    private final SpeedController speedController2 = RobotMap.driveTrainSpeedController2;
    private final SpeedController speedController3 = RobotMap.driveTrainSpeedController3;
    private final SpeedController speedController4 = RobotMap.driveTrainSpeedController4;
    private final RobotDrive robotDrive41 = RobotMap.driveTrainRobotDrive41;
    private final AnalogGyro analogGyro1 = RobotMap.driveTrainAnalogGyro1;
    private final AnalogAccelerometer analogAccelerometer1 = RobotMap.driveTrainAnalogAccelerometer1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    double Kp = 0.03;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveManual());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void takeJoystickInputs(double left, double right) {
    	robotDrive41.tankDrive(left, right);
    }
    public void resetanalogGyro1(){
    	analogGyro1.reset();    	
    }
    public double getanalogGyro1Angle(){
    	double angle = analogGyro1.getAngle();
    	return angle;    	
    }
    public void driveForwardAuto(){
    	double angle= getanalogGyro1Angle();
    	double turnValue = (0.0 - angle)* Kp;
    	//Drive Forward
    	robotDrive41.tankDrive(.75 - turnValue, .75 + turnValue);
    	//Drive Reverse
    	robotDrive41.tankDrive(-.75 - turnValue, -.75 + turnValue);
    }
    public void stop() {
    	robotDrive41.tankDrive(0, 0);
    }
}

