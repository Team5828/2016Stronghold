// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5828.RoboPats;

import org.usfirst.frc5828.RoboPats.commands.AutoGroup;
import org.usfirst.frc5828.RoboPats.commands.AutoCommand;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogAccelerometer;
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController cannonSpeedController1;
    public static SpeedController cannonSpeedController2;
    public static RobotDrive cannonCannonMotors;
    public static SpeedController driveTrainSpeedController1;
    public static SpeedController driveTrainSpeedController2;
    public static SpeedController driveTrainSpeedController3;
    public static SpeedController driveTrainSpeedController4;
    public static RobotDrive driveTrainRobotDrive41;
    public static AnalogGyro driveTrainAnalogGyro1;
    public static AnalogAccelerometer driveTrainAnalogAccelerometer1;
    public static SpeedController armSpeedController1;
    public static SpeedController armNULL;
    public static RobotDrive armArmControl;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        cannonSpeedController1 = new Talon(4);
        LiveWindow.addActuator("Cannon", "Speed Controller 1", (Talon) cannonSpeedController1);
        
        cannonSpeedController2 = new Talon(5);
        LiveWindow.addActuator("Cannon", "Speed Controller 2", (Talon) cannonSpeedController2);
        
        cannonCannonMotors = new RobotDrive(cannonSpeedController1, cannonSpeedController2);
        
        cannonCannonMotors.setSafetyEnabled(false);
        cannonCannonMotors.setExpiration(0.1);
        cannonCannonMotors.setSensitivity(0.5);
        cannonCannonMotors.setMaxOutput(1.0);
        cannonCannonMotors.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveTrainSpeedController1 = new VictorSP(0);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 1", (VictorSP) driveTrainSpeedController1);
        
        driveTrainSpeedController2 = new VictorSP(1);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 2", (VictorSP) driveTrainSpeedController2);
        
        driveTrainSpeedController3 = new VictorSP(2);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 3", (VictorSP) driveTrainSpeedController3);
        
        driveTrainSpeedController4 = new VictorSP(3);
        LiveWindow.addActuator("DriveTrain", "Speed Controller 4", (VictorSP) driveTrainSpeedController4);
        
        driveTrainRobotDrive41 = new RobotDrive(driveTrainSpeedController4, driveTrainSpeedController2,
              driveTrainSpeedController3, driveTrainSpeedController1);
        
        driveTrainRobotDrive41.setSafetyEnabled(false);
        driveTrainRobotDrive41.setExpiration(0.1);
        driveTrainRobotDrive41.setSensitivity(0.8);
        driveTrainRobotDrive41.setMaxOutput(0.8);

        driveTrainAnalogGyro1 = new AnalogGyro(0);
        LiveWindow.addSensor("DriveTrain", "AnalogGyro 1", driveTrainAnalogGyro1);
        driveTrainAnalogGyro1.setSensitivity(0.007);
        driveTrainAnalogAccelerometer1 = new AnalogAccelerometer(2);
        LiveWindow.addSensor("DriveTrain", "AnalogAccelerometer 1", driveTrainAnalogAccelerometer1);
        driveTrainAnalogAccelerometer1.setSensitivity(0.0);
        driveTrainAnalogAccelerometer1.setZero(2.5);
        armSpeedController1 = new Talon(6);
        LiveWindow.addActuator("Arm", "Speed Controller 1", (Talon) armSpeedController1);
        
        armNULL = new Talon(19);
        LiveWindow.addActuator("Arm", "NULL", (Talon) armNULL);
        
        armArmControl = new RobotDrive(armSpeedController1, armNULL);
        
        armArmControl.setSafetyEnabled(true);
        armArmControl.setExpiration(0.1);
        armArmControl.setSensitivity(0.5);
        armArmControl.setMaxOutput(1.0);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
